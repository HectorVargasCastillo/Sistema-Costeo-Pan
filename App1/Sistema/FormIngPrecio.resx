<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVKlUMWjNgT1o1
        YmBaMmFMWzJfOF0xYylaMWIfWDFiGl81XxhbLVscXDFjJFg0YjFcMmBCXDRiWFo1YmVaNV9lWzNgZFoz
        YWNbNGBiXDRhYVo1YmBaNF9dWTNhPFUAVQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWzNfS1s0
        YexeOWX/ZURv/145Zf9cNWL/XDVi/1w1Yv9cNWL/XDVi/1w1Yv9cNWL/XDVi/1w1Yv9iP2v/ZURv/1w1
        Yv9cNWL/YUJu/2JEcf9iRHH/YkRx/2JDcP9cNmP/WzRh21syXzgAAAAAAAAAAAAAAAAAAAAAAAAAAFkz
        XyhbNGL3gnWZ/7PH4f/I4fv/yeL9/8Ta9v++0O3/usrn/7fG5P+3xeP/uMfl/7zN6v/B1fH/x9/6/7jG
        5P+Xk7f/pajJ/2hIc/95eKX/odL+/6HS/v+h0v7/odL+/5vF8f93cp//WzVh8Fc0YB0AAAAAAAAAAAAA
        AAAAAAAAXDRhkm5Uff+0y+P/wNjy/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/qK3O/25Re/9lQ27/oaPF/104Zf+cyPT/odL+/6HS/v+h0v7/odL+/6DR/f9qVoP/WzNhhgAA
        AAAAAAAAAAAAAAAAAABaNGG8hnyf/7XM5P/E3Pf/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yOD7/2ZFcf+ipcb/XDVi/5Kw3f+h0v7/odL+/6HS/v+h0v7/odL+/3t9
        qf9bNGGvAAAAAAAAAAAAAAAAAAAAAFo0Yb+IgKL/tczk/8Td9//K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/uMfl/8bd+P9cNWL/ka7a/6HS/v+h0v7/odL+/6HS
        /v+h0v7/fH+s/1s1YbIAAAAAAAAAAAAAAAAAAAAAWjRhv4iAov+1zOT/xN33/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/1w1Yv+Rrtr/odL+/6HS
        /v+h0v7/odL+/6HS/v98f6z/WzVhsgAAAAAAAAAAAAAAAAAAAABaNGG/iICi/7XM5P/E3ff/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/XDVi/5Gu
        2v+h0v7/odL+/6HS/v+h0v7/odL+/3x/rP9bNWGyAAAAAAAAAAAAAAAAAAAAAFo0Yb+IgKL/tczk/8Td
        9//K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v9cNWL/ka7a/6HS/v+h0v7/odL+/6HS/v+h0v7/fH+s/1s1YbIAAAAAAAAAAAAAAAAAAAAAWjRhv4iA
        ov+1zOT/xN33/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/1w1Yv+Rrtr/odL+/6HS/v+h0v7/odL+/6HS/v98f6z/WzVhsgAAAAAAAAAAAAAAAAAA
        AABaNGG/iICi/7XM5P/E3ff/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/XDVi/5Gu2v+h0v7/odL+/6HS/v+h0v7/odL+/3x/rP9bNWGyAAAAAAAA
        AAAAAAAAAAAAAFo0Yb+IgKL/tczk/8Td9//K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v9cNWL/ka7a/6HS/v+h0v7/odL+/6HS/v+h0v7/fH+s/1s1
        YbIAAAAAAAAAAAAAAAAAAAAAWjRhv4iAov+1zOT/xN33/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/1w1Yv+Rrtr/odL+/6HS/v+h0v7/odL+/6HS
        /v98f6z/WzVhsgAAAAAAAAAAAAAAAAAAAABaNGHHiICi/7XM5P/E3ff/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/XDVi/3Flkv93c6D/d3Og/3dz
        oP93c6D/d3Og/2lSf/9bNGG6AAAAAAAAAAAAAAAAWjNhcV44Zf+Znbv/dWCH/6211f/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v95Y4z/XDVi/29g
        jf90a5j/dGuY/3RrmP90a5j/c2qX/104Zf5aM2JoAAAAAF0zXR5bNGH4kI2u/25Uff9uUXv/wNTw/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8Xc
        9/9vU33/eHWh/6HS/v+h0v7/odL+/6HS/v+h0v7/iJnF/1s0YvdXNGAdWzRidWpNdv+JgqT/Z0dy/8DT
        7//K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/6Soyf9fPWr/oM/7/6HS/v+h0v7/odL+/6HS/v+g0f3/Z057/1s0YnVbNGGae2qP/3Rf
        hv+LgKb/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/usnn/1w1Yv+Zwe3/odL+/6HS/v+h0v7/odL+/6HS/v90bJn/WjRhm1o0
        YY10XoX/fGyR/3lji//J4v3/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v+xvNv/XDVi/53J9f+h0v7/odL+/6HS/v+h0v7/odL+/29g
        jf9cNGGNWzNfS145Zf+Ym7n/XTdk/4Fwl/+1wuD/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/4l9ov9qVIH/odL+/6HS/v+h0v7/odL+/6HS
        /v+ZwOz/Xjlm/1oyYUwAAAABWjRhx29Vfv+WmLf/cFd//5CHrP/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj
        /v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v/K4/7/yuP+/8rj/v+hosT/XTZj/4yj0P+h0v7/odL+/6HS
        /v+h0v7/m8by/2tYhf9bNGDIAAAAAgAAAABYMWIaWzRh0mI/a/+BdJj/mpm7/6221v+6yuf/xdv3/8ni
        /f/K4/7/yuP+/8rj/v/K4/7/yuP+/8jh/P/A0/D/tMHf/6aqyv+Vj7P/d1+I/1w1Yv98f6v/l7vn/5Oy
        3v+NptL/hpXB/3l5pf9hQW7/WzRh0VgxYhoAAAAAAAAAAAAAAABIJEgHXDNhaVs1YrZbNGHgWzRh/Vw1
        Yv9cNWL/Xjll/2RCbv9nRnL/aEhz/2ZFcP9iPmr/XDVi/1w1Yv9cNWL/XDVi/1w1Yv9cNWL/XDVi/1w1
        Yv9cNWL/XDVi/1w0YfZbNGHcWzNitlozYmhIJEgHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABIJEgHVy9fIFkxXTlaNGFJWzJhVlw1YltbM2BfWjRiXVw1YltZNF9YXDRiU1ozYE9bM2JLWjRhRFkz
        YTxaMl8zWzRiJ1UvXhtMM0wKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////AAAA/gAAAHwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAHAAAAD/AAAf/////////////////////8=
</value>
  </data>
</root>